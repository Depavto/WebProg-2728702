<html>
  <head>
      <title>
          Best game 2019
      </title>
      <script src="https://cdn.jsdelivr.net/npm/phaser@3.15.1/dist/phaser.min.js"></script>
  </head>

  <body>
      <h1>Greetings, sir Knight</h1>
      <h3>It's raining gold!  </h3>
      <h5>Collect as many coins as you and become the knight in the shiniest armor</h5>

    <script>

      var cursors;
      var knight;
      var crates;
      var coinTimer;
      var coins;

      var score = 0;
      var scoreText;

      var secondsLeft = 30;
      var timeLeftText;
      var timeLeftTimer;

      var gameOver = false;

      // configure the game (height, width, render-type, game loop functions)
      var config = {
        width: 800,
        height: 500,
        type: Phaser.AUTO,
        scene: {
          preload: gamePreload,
          create: gameCreate,
          update: gameUpdate
        },

      physics: {
          default:"arcade",
          arcade:{
            gravity:{y:1000},
            debug:false
          }
        }
      }

      function gamePreload(){
        // Loading assets
      console.log("Loading assets");
      this.load.image("knight","assets/knight.png")
      this.load.image("crate","assets/crate.png")
      this.load.image("background", "assets/background.png")
      this.load.image("bitcoin", "assets/bitcoin.png")


      // run animations for Knight
      this.load.image("run_frame_1","assets/knight/run/Run (1).png");
      this.load.image("run_frame_2","assets/knight/run/Run (2).png");
      this.load.image("run_frame_3","assets/knight/run/Run (3).png");
      this.load.image("run_frame_4","assets/knight/run/Run (4).png");
      this.load.image("run_frame_5","assets/knight/run/Run (5).png");
      this.load.image("run_frame_6","assets/knight/run/Run (6).png");
      this.load.image("run_frame_7","assets/knight/run/Run (7).png");
      this.load.image("run_frame_8","assets/knight/run/Run (8).png");
      this.load.image("run_frame_9","assets/knight/run/Run (9).png");
      this.load.image("run_frame_10","assets/knight/run/Run (10).png");

      // idle animations for Knight
      this.load.image("idle_frame_1","assets/knight/idle/Idle (1).png");
      this.load.image("idle_frame_2","assets/knight/idle/Idle (2).png");
      this.load.image("idle_frame_3","assets/knight/idle/Idle (3).png");
      this.load.image("idle_frame_4","assets/knight/idle/Idle (4).png");
      this.load.image("idle_frame_5","assets/knight/idle/Idle (5).png");
      this.load.image("idle_frame_6","assets/knight/idle/Idle (6).png");
      this.load.image("idle_frame_7","assets/knight/idle/Idle (7).png");
      this.load.image("idle_frame_9","assets/knight/idle/Idle (9).png");
      this.load.image("idle_frame_10","assets/knight/idle/Idle (10).png");

    }

      function gameCreate(){
        // initial setup logic on the the asset and other setup
      console.log("Creating game");

      // create background
      this.add.image (300,300, "background")

      // create the knight
      knight = this.physics.add.sprite(200,100,"knight");
      // setSize to change the hitbox
      knight.body.setSize(220,600,11,0)
      // scale to make the character a suitable size for the map
      knight.scaleX = 0.15
      knight.scaleY = 0.15


      // create a floor of crates
      crates = this.physics.add.staticGroup();
      crates.create(40,450,"crate");
      crates.create(120,450,"crate");
      crates.create(200,450,"crate");
      crates.create(280,450,"crate");

      // airborn crates
      crates.create(380,345,"crate");
      crates.create(500,460,"crate");
      crates.create(580,460,"crate");
      crates.create(660,460,"crate");
      crates.create(520,220,"crate");
      crates.create(600,220,"crate");
      crates.create(680,220,"crate");
      crates.create(300,200,"crate");
      crates.create(80,150,"crate");

      // create animations
      this.anims.create({
          key: "knight_run",
          frames:[
            {key: "run_frame_1"},
            {key: "run_frame_2"},
            {key: "run_frame_3"},
            {key: "run_frame_4"},
            {key: "run_frame_5"},
            {key: "run_frame_6"},
            {key: "run_frame_7"},
            {key: "run_frame_8"},
            {key: "run_frame_9"},
            {key: "run_frame_10"},
          ],

          frameRate:9,
          repeat: 1
      });
      this.anims.create({
        key: "knight_idle",
        frames:[
          {key:"idle_frame_1"},
          {key:"idle_frame_2"},
          {key:"idle_frame_3"},
          {key:"idle_frame_4"},
          {key:"idle_frame_5"},
          {key:"idle_frame_6"},
          {key:"idle_frame_7"},
          {key:"idle_frame_9"},
          {key:"idle_frame_10"},
        ],
        frameRate: 9,
        repeat: 1

      })
      // now I want the knight and the crates to collide
      this.physics.add.collider(crates, knight);

      scoreText = this.add.text(16, 16, "Bitcoin Bag: 0",
                                {fontSize:"32px",
                                 fill: "#000"});


      // for some reason I can't explain this text does not appear in the game
      timeLeftText = this.add.text(16, 70, secondsLeft + "Time left",
                                                           {fontSize:"32px",
                                                            fill: "#f00"})

      cursors = this.input.keyboard.createCursorKeys();

      coinTimer = this.time.addEvent({
          delay: Phaser.Math.Between(1000,4500),
          callback: generateCoins,
          callbackScope: this,
          repeat: -1
      });

      timeLeftTimer = this.time.addEvent({
          delay: 1000,
          callback: updateTimeLeft,
          callbackScope: this,
          repeat: -1
      });
    }

    function updateTimeLeft(){

      if(gameOver) return;

    secondsLeft -= 1;
    timeLeftText.setText(secondsLeft + " seconds left");

    if(secondsLeft<=0){
      this.physics.pause();
      gameOver = true;
    }
  }

      function generateCoins(){


      var coins = this.physics.add.group({
        key: "bitcoin",
        repeat:1,
        setXY:{
          x: Phaser.Math.Between(5,795),
          y: -100,
          stepX: Phaser.Math.Between(25,120)
        }
      });

      // code to execute on each spwaning coin
      coins.children.iterate(function(child){
        child.setBounceY(Phaser.Math.Between(0.4,1.5))
      });

      this.physics.add.collider(coins,crates);
      this.physics.add.overlap(knight, coins, collectCoin, null, this)
      }

      function collectCoin(knight,coin){
      coin.disableBody(true, true);
      score+=1;
      scoreText.setText("Bitcoin Bag: " + score);
      }

      function gameUpdate(){
        // monitoring inputs and telling the game how to update

      if(cursors.left.isDown){
        knight.setVelocityX(-250)
        knight.play("knight_run", true)
        knight.flipX = true
      }
      else if (cursors.right.isDown){
        knight.setVelocityX(250)
        knight.play("knight_run", true)
        knight.flipX = false
      }
      else{
        knight.setVelocityX(0)
        knight.play("knight_idle", true)
      }

      if (cursors.up.isDown && knight.body.touching.down) {
        knight.setVelocityY(-550)
      }
    }

      var game = new Phaser.Game(config);
    </script>

  </body>
</html>
